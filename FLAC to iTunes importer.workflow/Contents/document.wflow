<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>419</string>
	<key>AMApplicationVersion</key>
	<string>2.6</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>export PATH="/usr/local/bin:$PATH"

processAlbumFolder() {
	SRC=$1
	DST="$HOME/Music/iTunes/iTunes Media/Automatically Add to iTunes"

	LABEL=$(xattr "$SRC" | grep flac_imported | wc -l)

	COVER_NAME="converter_cover.jpg"
	META_NAME="converter_metadata.txt"

	COVER_PATH="$SRC/$COVER_NAME"
	META_PATH="$SRC/$META_NAME"

	if [ "$LABEL" -eq "0" ] &amp;&amp; [ -n "$SRC" ]; then
		# set parsed label 
		xattr -w flac_imported true "$SRC"

		# sleep while download active
	    while [ $(ps aux | grep lftp | grep -v grep | wc -l) -gt "0" ]; do
	        sleep 5
	    done

		FIRST=$(find "$SRC" -name "*.flac" -print | head -n 1)
		
		# trying to extract cover from current track
		ffmpeg -i "$FIRST" "$COVER_PATH"
		FF=$?
		
		# convert for test AP
		ffmpeg -y -i "$FIRST" -c:a alac -vn "$FIRST.m4a"
		
		# trying to embed cover
		AtomicParsley "$FIRST.m4a" --artwork "$COVER_PATH" --overWrite
		AP=$?
		
		# if failed, trying download from sacad
		if [ "${FF}" -ne "0" ] || [ "${AP}" -ne "0" ]; then
		    ffmpeg -i "$FIRST" -f ffmetadata "$META_PATH"
		
		    ARTIST=$(cat "$META_PATH" | grep -i artist= | head -1 | sed -e "s/artist=//I" | xargs)
		    ALBUM_ARTIST=$(cat "$META_PATH" | grep -i "^album.*artist=" | head -1 | sed -e "s/album.*artist=//I" | xargs)
		    ALBUM=$(cat "$META_PATH" | grep -i album= | head -1 | sed -e "s/album=//I" | sed -e "s/(.*digipack.*)\|(.*deluxe.*)\|(.*bonus.*)\|(.*japan.*)\|(.*remaster.*)\|(.*mfsl.*)//I" | xargs)
		
		    if [ "$ALBUM_ARTIST" ]; then
		        ARTIST=$ALBUM_ARTIST
		    fi
		
	        echo "Detected artist: $ARTIST"
	        echo "Detected album: $ALBUM"
	        echo "Path: $COVER_PATH"

		    sacad -d "$ARTIST" "$ALBUM" 600 "$COVER_PATH"
		
		    rm "$META_PATH"
		fi
		
		find "$SRC" -name "*.flac" -exec ffmpeg -y -i '{}' -c:a alac -vn '{}'.m4a \;
		find "$SRC" -name "*.m4a" -exec AtomicParsley '{}' --artwork "$COVER_PATH" --overWrite \;
		find "$SRC" -name "*.m4a" -exec mv '{}' "$DST" \;
		
		rm "$COVER_PATH"
		
		/usr/bin/osascript -e 'display notification "New ALAC tracks imported " with title "iTunes"'
	fi
}

LOCK="/tmp/flac-to-itunes.lock"
trap "rm -f $LOCK" SIGINT SIGTERM

if [ -e "$LOCK" ] || [ -z "$1" ]
then
    echo "flac to itunes is running already."
    exit
else
	echo "Base: $1" &gt;&gt; /tmp/flac_imported

    touch "$LOCK"
	BASE=$(dirname "$1")

	IFS=$'\n'

	for DIRECTORY in $(find "$BASE/"* -maxdepth 0 -type d); 
	do
		IMPORTED=$(xattr "$DIRECTORY" | grep flac_imported | wc -l)
		if [ "$IMPORTED" -eq "0" ]; then
			echo "Album: $DIRECTORY" &gt;&gt; /tmp/flac_imported

			processAlbumFolder "$DIRECTORY"
		fi
	done

	rm -f "$LOCK"
    trap - SIGINT SIGTERM
    exit
fi</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>9558EAB6-5F28-4628-B279-22E43D977EFC</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>37A5C02C-4140-40C7-8EA2-DC8C3BC21A9D</string>
				<key>UUID</key>
				<string>620C7E6F-E797-4AA2-B496-AA37D77C7D6B</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>769.000000:610.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.folderAction</string>
	</dict>
</dict>
</plist>
